#!/usr/bin/env ruby
require 'tarkin'
require 'optparse'
require 'highline/import'
require 'open-uri'
include CommandLineReporter if require 'command_line_reporter'
require 'tarkin_commands'
require 'tarkin_sh'

options = {}
OptionParser.new do |opts|
  opts.banner = "Usage: tarkin [options] [PATH TO PASSWORD*]"
  opts.separator "Client for Tarkin Team Password Manager: https://github.com/grych/tarkin"
  opts.separator "Options:"
  opts.on("-l", "--ls PATH", "Lists the directory") do |p|
    options[:ls] = p
  end
  opts.on("-f", "--find TERM", "Search for items and directories, may use asterisks *") do |p|
    options[:find] = p
  end
  opts.on("-x", "--long", "Long listing (like ls -l)") do |l|
    options[:long] = l
  end
  opts.separator "Examples:"
  opts.separator "tarkin /db/prod/oracle/scott"
  opts.separator "tarkin --long --list /db/prod"
  opts.separator "tarkin --find scott"
end.parse!

# pp options

paths = ARGV

client = TarkinClient.new
commands = TarkinCommands.new(client)

if options[:ls]
  commands.ls(options[:ls], options[:long])
elsif options[:find]
  commands.find(options[:find])
elsif paths.empty?
  TarkinSh.start client, commands
else
  paths.each do |pwd|
    if pwd[/^-?\d+$/]
      pwd = pwd.to_i 
    else
      pwd = URI::encode(pwd)
    end
    begin
      commands.cat(pwd)
    rescue TarkinClientException => e
      puts "Not found (#{e.message})"
    end
  end
end

